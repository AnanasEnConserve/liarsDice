(add-dm
    (goal isa initiate-game state start)
)

(p collect-info
 =goal>
    isa initiate-game
    state start
==>
 =goal>
    isa initiate-game
    state store
 +action>
    isa info
    playerbid val1
    modelbid val2
    fix bool2
    turn who
    playerBluff val3
    playerGul val4
    influence val5
)

(p store-info
 =goal>
    isa initiate-game
    state store
 =action>
    isa info
    playerbid =val1
    modelbid =val2
    fix =bool2
    turn =who
    playerBluff =val3
    playerGul =val4
    influence =val5
==>
 =goal>
    isa initiate-game
    state decide
    playerbid =val1
    modelbid =val2
    fix =bool2
    turn =who
    playerBluff =val3
    playerGul =val4
    influence =val5
 -action>
)

(p no-fix-decide-believe
 =goal>
    isa initiate-game
    state decide
 <= playerbid 3
    turn player
==>
 +action>
    isa decision
    response believe
 =goal>
    state start
)

(p fix-decide-believe-1
=goal>
    isa initiate-game
    state decide
    playerbid 4
 >= fix 2
    turn player
==>
 +action>
    response believe
 =goal>
    state start
)

(p fix-decide-believe-2
 =goal>
    isa initiate-game
    state decide
 >= playerbid 5
 >= fix 3
    turn player
==>
 +action>
    response believe
 =goal>
    state start
)

(p fix-decide-bluff-1
 =goal>
    isa initiate-game
    state decide
 >= playerbid 4
 <= fix 1
    turn player
==>
 +action>
    response callBluff
 =goal>
    state start
)

(p fix-decide-bluff-2
 =goal>
    isa initiate-game
    state decide
 >= playerbid 5
 <= fix 2
    turn player
==>
 +action>
    response callBluff
 =goal>
    state start
)

(p make-equal-or-higher-bid
 =goal>
 	isa initiate-game
 	state decide
    playerbid =val
 >= modelbid =val
    - turn player
==>
 =goal>
 	isa decision
 	response t-bid
)

(p make-lastresort-bluff-bid
 =goal>
    isa initiate-game
    state decide
    playerbid =val
  < modelbid =val
    - turn player
==>
 +action>
    isa decision
    response lastresort
 =goal>
    isa initiate-game
    state start
)


(goal-focus goal)
